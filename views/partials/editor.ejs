<!-- now this is what i call web dev -->
<hr>
<h3>Results</h3>
<ul id="codeResults">Results will be displayed here.</ul>
<hr>
<h3>Editor</h3>

<div class="dropdown">
    <button class="btn btn-default dropdown-toggle" type="button" id="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true"
    aria-expanded="true">
        Choose Language
        <span class="caret"></span>
    </button>
    <ul style="height: 300px; overflow: auto" class="dropdown-menu" id="set-lang-dropdown" aria-labelledby="dropdownMenu1">
    </ul>
</div>

<pre id="editor"></pre>

<br/>
<div class="container">
    <div class="col-md-8"></div>
    <button type="button" class="btn btn-default" id="submit">Submit</button>
</div>

<script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
<script src="/ace-builds/src-min/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
    var codes, names;

// Setup the editor
var editor = ace.edit("editor");
var lang = "";
editor.setTheme("ace/theme/monokai");
editor.setValue("Select your language from the dropdown box above");

function sortObject(obj) {
    var sorted = {},
    key, arr = [];

    for (key in obj) {
        if (obj.hasOwnProperty(key)) {
            arr.push(key);
        }
    }

    arr.sort();

    for (key = 0; key < arr.length; key++) {
        sorted[arr[key]] = obj[arr[key]];
    }
    return sorted;
}

$(document).ready(function() {
    
    // Connect Socket.io to the server
    var socket = io.connect('http://<%= ip %>:<%= port %>');
    
    // Initial editor settings
    editor.setValue("Read input from STDIN, output to STDOUT");
    $(".dropdown-toggle").html("C <span class=\"caret\"></span>");
    lang = "c";
    editor.getSession().setMode("ace/mode/c_cpp");
    
    $(".dropdown-toggle").dropdown();
    
    // Request languages
    socket.emit("languages request");

    // Receive languages
    socket.on("languages", function(languagesIn) {
        // Store languages
        var languages = languagesIn.languages.names;
        
        languages = sortObject(languages);

        // Store codes
        var codes = [];
        for (var key in languages) {
            codes.push(key);
        }

        // Store names
        var names = Object.keys(languages).map(function(i) {
            return languages[i];
        });

        names.forEach(function(val, index, array) {
            $("#set-lang-dropdown").append('<li><a data-target="#" class="set-lang" id="' + codes[index] + '">' + val + '</a></li>');
        });
    });

    // Submit button pressed
    $("#submit").click(function() {
        // Turn data into a JSON string
        var data = JSON.stringify({
            'code': editor.getValue(),
            'lang': lang,
            'problem': prob
        });
        
        // Send JSON string to server over Socket.io
        socket.emit("code submission", data);
    });

    // Get results
    socket.on("code results", function(results) {
        $("#codeResults").empty();
        results.forEach(function(val, index, array) {
            if(val) {
                $("#codeResults").append('<li style="color: green; font-weight: bolder; font-size: 15px;">Testcase ' + (index + 1) + ': Pass</li>');
            } else {
                $("#codeResults").append('<li style="color: red; font-weight: bolder; font-size: 15px;">Testcase ' + (index + 1) + ': Fail</li>');
            }
        });
    });
});

$(document).on("click", ".set-lang", function(event) {
    $(".dropdown-toggle").html($(this).text() + "<span class=\"caret\"></span>");
    lang = event.target.id;
    if(lang == "cpp") {
        editor.getSession().setMode("ace/mode/c_cpp");
    } else {
        editor.getSession().setMode("ace/mode/" + event.target.id);
    }
});

</script>